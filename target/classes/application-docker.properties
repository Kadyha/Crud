# Docker profile (MySQL in docker-compose)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:db}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:crudapp}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${MYSQL_USER:appuser}
spring.datasource.password=${MYSQL_PASSWORD:apppass}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=false

# Initialize schema/data on startup (runs data-docker.sql)
spring.sql.init.mode=always
spring.sql.init.platform=mysql
spring.sql.init.data-locations=classpath:data-docker.sql
spring.jpa.defer-datasource-initialization=true

# Shared app settings
spring.webservices.path=/ws
app.frontend.url=${APP_FRONTEND_URL:http://localhost:5173}

# Security: enable OAuth2 in docker (can be overridden by env)
security.oauth2.enabled=true

# Respect X-Forwarded-* headers (behind Nginx in Docker) so OAuth2 baseUrl is correct
server.forward-headers-strategy=framework
# Also honor classic proxy headers if present
server.tomcat.remoteip.header-name=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto
server.tomcat.remoteip.host-header=x-forwarded-host

# Cookies for cross-site OAuth in local docker (adjust secure if using HTTPS locally)
server.servlet.session.cookie.same-site=None
server.servlet.session.cookie.secure=false
