# Railway profile (MySQL)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Accept both our conventional env vars (MYSQL_HOST/PORT/USER/PASSWORD/DATABASE) and Railway's defaults (MYSQLHOST/MYSQLPORT/MYSQLUSER/MYSQLPASSWORD/MYSQLDATABASE).
# Important: Railway often sets MYSQL_URL like "mysql://user:pass@host:port/db" (NOT JDBC). We therefore do NOT prefer MYSQL_URL here.
# If you want to override with a JDBC URL, set SPRING_DATASOURCE_URL directly in Railway.
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:${MYSQLHOST:localhost}}:${MYSQL_PORT:${MYSQLPORT:3306}}/${MYSQL_DATABASE:${MYSQLDATABASE:crud}}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${MYSQL_USER:${MYSQLUSER:root}}
spring.datasource.password=${MYSQL_PASSWORD:${MYSQLPASSWORD:password}}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=false

# Server port provided by Railway
server.port=${PORT:8080}

# Optional data seed (disabled by default). To seed, set APP_DB_SEED=always (or APP_DB_SEED_MODE=always).
# Uses data-cloud.sql and defers until JPA creates/updates the schema.
spring.sql.init.mode=${APP_DB_SEED_MODE:${APP_DB_SEED:never}}
spring.sql.init.platform=mysql
spring.sql.init.data-locations=classpath:data-cloud.sql
spring.jpa.defer-datasource-initialization=true

# Shared app settings
spring.webservices.path=/ws

# Frontend URL (Vercel) for redirect after login/logout in cloud
app.frontend.url=${APP_FRONTEND_URL:https://crud-cohan.vercel.app}

# Ensure session cookies are sent cross-site from Vercel to Railway
server.servlet.session.cookie.same-site=None
server.servlet.session.cookie.secure=true

# Respect X-Forwarded-* headers so generated redirects use https and correct host
server.forward-headers-strategy=framework

# Enable OAuth2 by default in cloud
security.oauth2.enabled=true

# OAuth2 GitHub registration (expects env GITHUB_CLIENT_ID/SECRET in Railway)
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github
# Reminder: In GitHub OAuth App (PROD), set Authorization callback URL to
#   https://${VERCEL_APP_DOMAIN}/login/oauth2/code/github

# Enable dev user (Basic/Form): dev/dev123 â€” set to false to disable in PROD
app.security.dev-user.enabled=${APP_SECURITY_DEV_USER_ENABLED:true}
app.security.user.name=${APP_SECURITY_USER_NAME:dev}
app.security.user.password=${APP_SECURITY_USER_PASSWORD:dev123}
